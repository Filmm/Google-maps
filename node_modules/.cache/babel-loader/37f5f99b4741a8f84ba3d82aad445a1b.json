{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Film\\\\clbs-app\\\\src\\\\Maps.js\";\nimport React, { Component } from 'react';\n\nclass ItemList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Items: [],\n      hasErrored: false,\n      isLoading: false\n    };\n  } //retrieve data using fetch\n\n\n  fetchData(url) {\n    this.setState({\n      isLoading: true\n    });\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      this.setState({\n        isLoading: false\n      });\n      return response;\n    }).then(response => {\n      response.Items.json();\n    }).then(Items => {\n      this.setState({\n        Items\n      });\n    }).catch(() => this.setState({\n      hasErrored: true\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchData(myURL);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"There was an error loading the items\");\n    }\n\n    if (this.state.isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.Items.map(item => React.createElement(\"li\", {\n      key: item.ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, item.SUBJECT))));\n  }\n\n}\n\nexport default ItemList;","map":{"version":3,"sources":["C:\\Users\\Film\\clbs-app\\src\\Maps.js"],"names":["React","Component","ItemList","constructor","state","Items","hasErrored","isLoading","fetchData","url","setState","fetch","then","response","ok","Error","statusText","json","catch","componentDidMount","myURL","render","map","item","ID","SUBJECT"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;AAChCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,UAAU,EAAE,KAFL;AAGPC,MAAAA,SAAS,EAAE;AAHJ,KAAX;AAKH,GAR+B,CAS/B;;;AACAC,EAAAA,SAAS,CAACC,GAAD,EAAK;AACX,SAAKC,QAAL,CAAc;AAACH,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACAI,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACOC,QAAD,IAAY;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAiB;AACb,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,WAAKN,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,aAAOM,QAAP;AACH,KAPD,EAUCD,IAVD,CAUOC,QAAD,IAAY;AAACA,MAAAA,QAAQ,CAACR,KAAT,CAAeY,IAAf;AAAsB,KAVzC,EAWCL,IAXD,CAWOP,KAAD,IAAS;AACV,WAAKK,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AAEJ,KAdD,EAeCa,KAfD,CAeO,MAAI,KAAKR,QAAL,CAAc;AAACJ,MAAAA,UAAU,EAAC;AAAZ,KAAd,CAfX;AAgBH;;AACDa,EAAAA,iBAAiB,GAAE;AACf,SAAKX,SAAL,CAAeY,KAAf;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKjB,KAAL,CAAWE,UAAf,EAA0B;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACH;;AACD,QAAI,KAAKF,KAAL,CAAWG,SAAf,EAAyB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKH,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAsBC,IAAD,IAClB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,OAAxB,CADH,CAFL,CADA,CADJ;AAUD;;AAnD6B;;AAqDhC,eAAevB,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nclass ItemList extends Component{\r\nconstructor(){\r\n    super();\r\n    this.state={\r\n        Items:[],\r\n        hasErrored: false,\r\n        isLoading: false\r\n    };\r\n}\r\n //retrieve data using fetch\r\n fetchData(url){\r\n    this.setState({isLoading: true});\r\n    fetch(url)\r\n    .then((response)=>{\r\n        if (!response.ok){\r\n            throw Error(response.statusText);\r\n        }\r\n        this.setState({isLoading:false});\r\n        return response;\r\n    })\r\n\r\n\r\n    .then((response)=>{response.Items.json()})\r\n    .then((Items)=>{\r\n         this.setState({Items});\r\n\r\n    })\r\n    .catch(()=>this.setState({hasErrored:true}));\r\n}\r\ncomponentDidMount(){\r\n    this.fetchData(myURL)\r\n}\r\n\r\nrender(){\r\n    if (this.state.hasErrored){\r\n        return <p>There was an error loading the items</p>;\r\n    }\r\n    if (this.state.isLoading){\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return(\r\n        <div>  \r\n        <ul>\r\n\r\n            {this.state.Items.map((item)=>(\r\n                <li key={item.ID}>{item.SUBJECT}</li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    );\r\n  }\r\n  }\r\nexport default ItemList;"]},"metadata":{},"sourceType":"module"}