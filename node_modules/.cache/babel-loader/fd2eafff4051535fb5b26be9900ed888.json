{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Film\\\\clbs-app\\\\src\\\\Auto.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search Places ...',\n      className: 'location-search-input'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, suggestion.description));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Film\\clbs-app\\src\\Auto.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","Component","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","state","render","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IAA6BC,gBAA7B,EAA+CC,SAA/C,QAAgE,2BAAhE;;AAEA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKHC,OAAD,IAAa;AAC1B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAPkB;;AAAA,SASnBE,YATmB,GASHF,OAAD,IAAa;AAC1BP,MAAAA,gBAAgB,CAACO,OAAD,CAAhB,CACGG,IADH,CACQC,OAAO,IAAIV,SAAS,CAACU,OAAO,CAAC,CAAD,CAAR,CAD5B,EAEGD,IAFH,CAEQE,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAHlB;AAID,KAdkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEV,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAaDW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWV,OADpB;AAEE,MAAA,QAAQ,EAAE,KAAKD,YAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKG,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAAC;AAAEU,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA;AAA9B,KAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CACMF,aAAa,CAAC;AAChBG,MAAAA,WAAW,EAAE,mBADG;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAOE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,YAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GAAoB,yBAApB,GAAgD,iBAAlE,CAD6B,CAE7B;;AACA,YAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACA;AAAEE,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADA,GAEA;AAAED,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAFd;AAGA,aACE,6CAASR,sBAAsB,CAACI,UAAD,EAAa;AAAEF,QAAAA,SAAF;AAAaI,QAAAA;AAAb,OAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,UAAU,CAACK,WAAlB,CADF,CADF;AAKD,KAXA,CADH,CAPF,CANJ,CADF;AAgCD;;AAlD+C","sourcesContent":["import React from 'react'\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\r\n\r\nclass LocationSearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = { address: '' }\r\n  }\r\n\r\n  handleChange = (address) => {\r\n    this.setState({ address })\r\n  }\r\n\r\n  handleSelect = (address) => {\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => console.log('Success', latLng))\r\n      .catch(error => console.error('Error', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n          <div>\r\n            <input\r\n              {...getInputProps({\r\n                placeholder: 'Search Places ...',\r\n                className: 'location-search-input'\r\n              })}\r\n            />\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {suggestions.map(suggestion => {\r\n                const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                            ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                            : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { className, style })}>\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}