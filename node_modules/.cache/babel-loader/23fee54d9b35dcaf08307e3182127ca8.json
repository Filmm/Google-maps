{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Film\\\\clbs-app\\\\src\\\\Maps.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n  }\n\n  fetchUsers() {\n    fetch(\"https://www.google.com/maps/embed/v1/place?key=AIzaSyCS4QDM_de0JGU7Qux2xa4VhxtVdmgXRJA\\n  \").then(response => response.json()).then(data => this.setState({\n      users: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Random User\"), error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, error.message) : null, !isLoading ? users.map(user => {\n      const username = user.username,\n            name = user.name,\n            email = user.email;\n      return React.createElement(\"div\", {\n        key: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Name: \", name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Email Address: \", email), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Film\\clbs-app\\src\\Maps.js"],"names":["React","App","Component","state","isLoading","users","error","fetchUsers","fetch","then","response","json","data","setState","catch","componentDidMount","render","message","map","user","username","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADwB;AAAA;;AAOhCC,EAAAA,UAAU,GAAG;AACXC,IAAAA,KAAK,8FAAL,CAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGF,IAHH,CAGQG,IAAI,IACR,KAAKC,QAAL,CAAc;AACZR,MAAAA,KAAK,EAAEO,IADK;AAEZR,MAAAA,SAAS,EAAE;AAFC,KAAd,CAJJ,EASGU,KATH,CASSR,KAAK,IAAI,KAAKO,QAAL,CAAc;AAAEP,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CATlB;AAUD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,UAAL;AACD;;AACDS,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKb,KADlC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,KADZ,eACYA,KADZ;AAAA,UACmBC,KADnB,eACmBA,KADnB;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACW,OAAV,CAAH,GAA4B,IAFpC,EAGG,CAACb,SAAD,GACCC,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AAAA,YACRC,QADQ,GACkBD,IADlB,CACRC,QADQ;AAAA,YACEC,IADF,GACkBF,IADlB,CACEE,IADF;AAAA,YACQC,KADR,GACkBH,IADlB,CACQG,KADR;AAEhB,aACE;AAAK,QAAA,GAAG,EAAEF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUC,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmBC,KAAnB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATD,CADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,CADF;AAoBD;;AA7C+B;;AAmDlC,eAAgBrB,GAAhB","sourcesContent":["import React from 'react';\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    users: [],\r\n    error: null\r\n  };\r\n\r\n  fetchUsers() {\r\n    fetch(`https://www.google.com/maps/embed/v1/place?key=AIzaSyCS4QDM_de0JGU7Qux2xa4VhxtVdmgXRJA\r\n  `)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          users: data,\r\n          isLoading: false,\r\n        })\r\n      )\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n  }\r\n  render() {\r\n    const { isLoading, users, error } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Random User</h1>\r\n        {error ? <p>{error.message}</p> : null}\r\n        {!isLoading ? (\r\n          users.map(user => {\r\n            const { username, name, email } = user;\r\n            return (\r\n              <div key={username}>\r\n                <p>Name: {name}</p>\r\n                <p>Email Address: {email}</p>\r\n                <hr />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <h3>Loading...</h3>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default (App);"]},"metadata":{},"sourceType":"module"}